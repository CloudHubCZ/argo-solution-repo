apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend-deployment
  namespace: {{ .Release.Namespace }}
  labels:
    app: backend
spec:
  replicas: {{ .Values.replicaCount }}
  strategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app: backend
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configMap-backend.yaml") . | sha256sum }}
      labels:
        app: backend
    spec:
      containers:
        - name: testapp
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          envFrom:
            - configMapRef:
                name: backend-cm
          readinessProbe:
            httpGet:
              path: /actuator/health/readiness
              port: 8080
            periodSeconds: 5
            initialDelaySeconds: 40
            failureThreshold: 2
            timeoutSeconds: 2
          livenessProbe:
            httpGet:
              path: /actuator/health/liveness
              port: 8080
            periodSeconds: 5
            initialDelaySeconds: 40
            failureThreshold: 1
            timeoutSeconds: 2
          startupProbe:
            httpGet:
              path: /actuator/health/liveness
              port: 8080
            failureThreshold: 25
            periodSeconds: 10
            initialDelaySeconds: 60
            timeoutSeconds: 2
          resources:
            requests:
              memory: "64Mi"
              cpu: "20m"
            limits:
              memory: "512Mi"
              cpu: "250m"
          topologySpreadConstraints:
            - maxSkew: 1
              topologyKey: kubernetes.io/hostname
              whenUnsatisfiable: ScheduleAnyway
              labelSelector:
                matchLabels:
                  app: backend

